[[plugins]]
repo = 'vim-airline/vim-airline'
hook_add = '''
" vim-airline
    let g:airline#extensions#virtualenv#enabled = 1
    if !exists('g:airline_symbols')
      let g:airline_symbols = {}
    endif
    if !exists('g:airline_powerline_fonts')
      " No airLine font
      let g:airline#extensions#tabline#left_sep = ' '
      let g:airline#extensions#tabline#left_alt_sep = '|'
      let g:airline#extensions#tabline#buffer_idx_mode = 1
      let g:airline_left_sep          = '▶'
      let g:airline_left_alt_sep      = '»'
      let g:airline_right_sep         = '◀'
      let g:airline_right_alt_sep     = '«'
      let g:airline#extensions#branch#prefix     = '⤴' "➔, ➥, ⎇
      let g:airline#extensions#readonly#symbol   = '⊘'
      let g:airline#extensions#linecolumn#prefix = '¶'
      let g:airline#extensions#paste#symbol      = 'ρ'
      let g:airline_symbols.linenr    = '␊'
      let g:airline_symbols.branch    = '⎇'
      let g:airline_symbols.paste     = 'ρ'
      let g:airline_symbols.paste     = 'Þ'
      let g:airline_symbols.paste     = '∥'
      let g:airline_symbols.whitespace = 'Ξ'
    else
      let g:airline#extensions#tabline#left_sep = ''
      let g:airline#extensions#tabline#left_alt_sep = ''
      let g:airline_left_sep = ''
      let g:airline_left_alt_sep = ''
      let g:airline_right_sep = ''
      let g:airline_right_alt_sep = ''
      let g:airline_symbols.branch = ''
      let g:airline_symbols.readonly = ''
      let g:airline_symbols.linenr = ''
    endif
'''

[[plugins]]
repo = 'vim-airline/vim-airline-themes'

[[plugins]]
repo = 'Shougo/defx.nvim'

[[plugins]]
repo = 'kristijanhusak/defx-icons'

[[plugins]]
repo = 'christoomey/vim-tmux-navigator'

#[[plugins]]
#repo = 'simeji/winresizer'

# Check node version (v10 or later needed) if coc.nvim got syntax error
# Type :CocConfig to open config
[[plugins]]
repo = 'neoclide/coc.nvim'
rev = 'release'
on_i = 1
merged = '0'
hook_source = 'call coil398#init#coc#hook_source()'
hook_add = '''
  nmap <silent> <C-]> <Plug>(coc-definition)
  nmap <silent> <C-t> <Plug>(coc-references)

  inoremap <expr> <cr> pumvisible() ? "\<C-y>" : "\<C-g>u\<CR>"
  function! s:check_back_space() abort
  let col = col('.') - 1
  return !col || getline('.')[col - 1]  =~ '\s'
  endfunction

  inoremap <silent><expr> <Tab>
        \ pumvisible() ? "\<C-n>" :
        \ <SID>check_back_space() ? "\<Tab>" :
        \ coc#refresh()


'''

[[plugins]]
repo = 'airblade/vim-gitgutter'
hook_add = '''
" let g:gitgutter_highlight_lines = 1 " Change color of changed line
let g:gitgutter_override_sign_column_highlight = 0
'''

[[plugins]]
repo = "tpope/vim-fugitive"


[[plugins]]
repo = 'sheerun/vim-polyglot'

[[plugins]] # toml syntax
repo = 'cespare/vim-toml'
on_ft = 'toml'


# idk really needed

[[plugins]]
repo = 'scrooloose/nerdtree'

[[plugins]]
repo = 'jistr/vim-nerdtree-tabs'

[[plugins]]
repo = 'junegunn/vim-easy-align'

[[plugins]]
repo = 'thinca/vim-quickrun'

[[plugins]]
repo = 'Shougo/vimproc.vim'

[[plugins]]
repo = 'tpope/vim-commentary'

[[plugins]]
repo = 'Raimondi/delimitMate'

[[plugins]]
repo = 'tpope/vim-surround'

[[plugins]]
repo = 'ntpeters/vim-better-whitespace'

[[plugins]]
repo = 'ervandew/supertab'

[[plugins]]
repo = 'hail2u/vim-css3-syntax'

[[plugins]]
repo = 'gorodinskiy/vim-coloresque'

[[plugins]]
repo = 'tpope/vim-haml'

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'jelera/vim-javascript-syntax'

[[plugins]]
repo = 'raimon49/requirements.txt.vim'
