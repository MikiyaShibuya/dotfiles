# ======== O S   D E T E C T I O N ========

if [ "$(uname)" = 'Darwin' ]; then
  OS='Mac'
elif [ "$(expr substr $(uname -s) 1 5)" = 'Linux' ]; then
  OS='Linux'
else
  echo "This computer OS: 'echo \$(uname)' = ${OS} is not recognized."
  exit 1
fi

# ======== P O W E R L E V E L   1 0 k ========

# Installation:
# $ git clone https://github.com/romkatv/powerlevel10k.git ~/powerlevel10k

# $ p10k configure

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

source ~/powerlevel10k/powerlevel10k.zsh-theme

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

typeset -g POWERLEVEL9K_INSTANT_PROMPT=quiet

# ======== A U T O   C O M P L E T E T I O N ========
autoload -U compinit
compinit
#setopt no_share_history

# Display cursor in completion
zstyle ':completion:*:processes' menu yes select=2

# ======== C O L O R   F O R   L S ========
export LSCOLORS=exfxcxdxbxegedabagacad
export LS_COLORS='di=34:ln=35:so=32:pi=33:ex=31:bd=46;34:cd=43;34:su=41;30:sg=46;30:tw=42;30:ow=43;30'
zstyle ':completion:*' list-colors 'di=34' 'ln=35' 'so=32' 'ex=31' 'bd=46;34' 'cd=43;34'

alias ls="ls -GF"

# ======== M I S C ========


# Use nvim as a default
alias vim='nvim'

# history
HISTFILE=$HOME/.zsh-history
HISTSIZE=100000
SAVEHIST=1000000

# share .zshhistory
setopt inc_append_history
setopt share_history

# ======== F Z F ========
# Installation (must be under x86 mode):
# git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf
# ~/.fzf/install
if [ -f "$HOME/.fzf.zsh" ]
then
    source ~/.fzf.zsh
fi

# ======== OS related configuration ========

if [ "$(uname)" = 'Darwin' ]; then
    # MacOS
    export LANG=en_US.UTF-8
    export LC_ALL=$LANG
    eval "$(/opt/homebrew/bin/brew shellenv)"
elif [ "$(expr substr $(uname -s) 1 5)" = 'Linux' ]; then
    # Linux
    if [ -n $DISPLAY ]
    then
        xset r rate 200 50 &> /dev/null
    fi
fi

export PATH="$PATH:$HOME/.local/bin"

# ======== pyenv ========
export PYENV_ROOT="$HOME/.pyenv"
command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

# ======== SSH Agent ========
agent="$HOME/.ssh/agent"
if [ -S "$SSH_AUTH_SOCK" ]; then
    case $SSH_AUTH_SOCK in
    /tmp/*/agent.[0-9]*)
        ln -snf "$SSH_AUTH_SOCK" $agent && export SSH_AUTH_SOCK=$agent
    esac
elif [ -S $agent ]; then
    export SSH_AUTH_SOCK=$agent
else
    echo "no ssh-agent"
fi
